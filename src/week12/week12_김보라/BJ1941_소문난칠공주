package week12.week12_김보라;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;

public class BJ1941_소문난칠공주 {

	static char[][] classroom;
	static int ans;
	static boolean[] visited;
	static int[] checked = new int[7];

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		classroom = new char[5][5];
		for (int i = 0; i < 5; i++) {
			classroom[i] = br.readLine().toCharArray();
		}

		comb(0, 0, 0);
		System.out.println(ans);
	}

	static void comb(int cnt, int start, int dasomCnt) {
		if (cnt - dasomCnt > 3)
			return;

		if (cnt == 7) {
			visited = new boolean[7];
			bfs(checked[0] / 5, checked[0] % 5);
			return;
		}

		for (int i = start; i < 25; i++) {
			int row = i / 5, col = i % 5;
			checked[cnt] = i;
			comb(cnt + 1, i + 1, (classroom[row][col] == 'S') ? dasomCnt + 1 : dasomCnt);
		}

	}

	static int[] dx = { -1, 1, 0, 0 };
	static int[] dy = { 0, 0, -1, 1 };

	static void bfs(int x, int y) {
		int num = 1;
		visited[0] = true;
		Queue<int[]> q = new ArrayDeque<>();
		q.add(new int[] { x, y });
		while (!q.isEmpty()) {
			x = q.peek()[0];
			y = q.poll()[1];
			for (int d = 0; d < 4; d++) {
				int nx = x + dx[d], ny = y + dy[d];
				if (nx >= 0 && nx < 5 && ny >= 0 && ny < 5) {
					int tmp = 5 * nx + ny;
					for (int k = 0; k < 7; k++) {
						if (!visited[k] && checked[k] == tmp) {
							visited[k] = true;
							num++;
							q.add(new int[] { nx, ny });
						}
					}
				}
			}
		}
		if (num == 7)
			ans++;
	}
}
